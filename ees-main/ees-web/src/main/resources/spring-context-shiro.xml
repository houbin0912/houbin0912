<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.2.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.2.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.2.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.2.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.2.xsd">
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/login.html" />
		<property name="filters">
			<util:map>
				<entry key="login" value-ref="loginAuthenticationFilter" />
				<entry key="authc" value-ref="formAuthenticationFilter" />
				<entry key="urlPerms" value-ref="urlAuthenticationFilter" />
			</util:map>
		</property>
		<property name="filterChainDefinitions">
			<value>
			/sys/login=login
			<!-- 添加时唯一性校验 ，直接放行-->
			/sys/logout=anon
			/sys/user/info=anon
			/sys/user/menu=anon
			/sys/user/check/loginName=anon
			/sys/role/check/roleName=anon
			/sys/quartz/checkJobNameAndGroup=anon
			/sys/quartz/checkTriggerNameAndGroup=anon
			/view/login.html=anon
			/view/401.html=anon
			/view/css/**=anon
			/view/fonts/**=anon
			/view/images/**=anon
			/view/js/**=anon
			/**=urlPerms
			</value>
		</property>
	</bean>

	<!-- 登陆验证过滤器 -->
	<bean id="loginAuthenticationFilter" class="com.baixin.ees.shiro.filter.LoginAuthenticationFilter">
	</bean>
	<!-- authc只有登陆过的用户才能通过 -->
	<bean id="formAuthenticationFilter" class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">
		<property name="loginUrl" value="/view/login.html" />
	</bean>
	<!-- url过滤的拦截器 -->
	<bean id="urlAuthenticationFilter" class="com.baixin.ees.shiro.filter.UrlAuthorizationFilter">
		<property name="loginUrl" value="/view/login.html" />
	</bean>


	<!-- AOP式方法级权限检查 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor">
		<property name="proxyTargetClass" value="true" />
	</bean>

	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />


	<!-- shiro securityManager -->
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realms">
			<list>
				<ref bean="statelessRealm" />
			</list>
		</property>
		<property name="subjectFactory" ref="customSubjectFactory" />
		<!-- <property name="cacheManager" ref="customCacheManager" /> -->
		<property name="cacheManager" ref="memoryConstrainedCacheManager" />
		<!-- <property name="sessionManager" ref="sessionManager"/> -->
		<property name="sessionManager" ref="defaultWebSessionManager" />
	</bean>

	<bean id="statelessRealm" class="com.baixin.ees.shiro.StatelessRealm">
		<property name="cachingEnabled" value="false" />
		<property name="authorizationCachingEnabled" value="false" />
		<property name="authenticationCachingEnabled" value="false" />
		<property name="sqlSessionFactory" ref="sqlSessionFactory" />
	</bean>

	<bean id="customSubjectFactory" class="com.baixin.ees.shiro.StatelessDefaultSubjectFactory" />

	<!-- 内存缓存 -->
	<bean id="memoryConstrainedCacheManager" class="org.apache.shiro.cache.MemoryConstrainedCacheManager" />

	<!-- sessionManager -->
	<bean id="defaultWebSessionManager"
		class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
		<property name="sessionIdUrlRewritingEnabled" value="false" />
		<!-- 设置全局会话超时时间，默认30分钟(1800000) -->
		<property name="globalSessionTimeout" value="1800000" />
		<!-- 是否在会话过期后会调用SessionDAO的delete方法删除会话 默认true -->
		<property name="deleteInvalidSessions" value="true" />
		<!-- 会话验证器调度时间-->
		<property name="sessionValidationInterval" value="1800000" />

		<property name="sessionIdCookieEnabled" value="true"/>
		<property name="sessionIdCookie" ref="simpleCookie"/>
	</bean>

	<bean id="simpleCookie" class="org.apache.shiro.web.servlet.SimpleCookie">
		<constructor-arg name="name" value="shiro.sesssion"/>
		<property name="path" value="/"/>
	</bean>

	<!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
	<bean
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="staticMethod"
			value="org.apache.shiro.SecurityUtils.setSecurityManager" />
		<property name="arguments" ref="securityManager" />
	</bean>
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
		depends-on="lifecycleBeanPostProcessor" />
	<bean
		class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
		<property name="securityManager" ref="securityManager" />
	</bean>
</beans>